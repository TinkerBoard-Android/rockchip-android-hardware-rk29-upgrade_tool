From 2f2c6514b2c7e9bf8fd9add5096d24fb8f935df3 Mon Sep 17 00:00:00 2001
From: Simon Xue <xxm@rock-chips.com>
Date: Mon, 30 Sep 2019 10:26:19 +0800
Subject: [PATCH 05/17] PCI: rockchip: dw: support turn off phy pd when suspend

1. keep atu index when resume
2. reconfigure phy and atu when resume

Change-Id: Iaf0a9f9a10e2f6c25a933cc808e1d7fcd78103b5
Signed-off-by: Simon Xue <xxm@rock-chips.com>
---
 drivers/pci/host/pcie-dw-rockchip.c | 64 +++++++++++++++++++++++++++++++------
 1 file changed, 54 insertions(+), 10 deletions(-)

diff --git a/drivers/pci/host/pcie-dw-rockchip.c b/drivers/pci/host/pcie-dw-rockchip.c
index 2d7b937a..1c65089 100644
--- a/drivers/pci/host/pcie-dw-rockchip.c
+++ b/drivers/pci/host/pcie-dw-rockchip.c
@@ -135,6 +135,7 @@ struct rk_pcie {
 	struct regmap			*usb_pcie_grf;
 	struct regmap			*pmu_grf;
 	struct dma_trx_obj		*dma_obj;
+	bool in_suspend;
 };
 
 struct rk_pcie_of_data {
@@ -404,11 +405,15 @@ static int rk_pcie_ep_inbound_atu(struct rk_pcie *rk_pcie,
 	int ret;
 	u32 free_win;
 
-	free_win = find_first_zero_bit(rk_pcie->ib_window_map,
-				       rk_pcie->num_ib_windows);
-	if (free_win >= rk_pcie->num_ib_windows) {
-		dev_err(rk_pcie->dev, "No free inbound window\n");
-		return -EINVAL;
+	if (rk_pcie->in_suspend) {
+		free_win = rk_pcie->bar_to_atu[bar];
+	} else {
+		free_win = find_first_zero_bit(rk_pcie->ib_window_map,
+					       rk_pcie->num_ib_windows);
+		if (free_win >= rk_pcie->num_ib_windows) {
+			dev_err(rk_pcie->dev, "No free inbound window\n");
+			return -EINVAL;
+		}
 	}
 
 	ret = rk_pcie_prog_inbound_atu(rk_pcie, free_win, bar, cpu_addr,
@@ -417,6 +422,10 @@ static int rk_pcie_ep_inbound_atu(struct rk_pcie *rk_pcie,
 		dev_err(rk_pcie->dev, "Failed to program IB window\n");
 		return ret;
 	}
+
+	if (rk_pcie->in_suspend)
+		return 0;
+
 	rk_pcie->bar_to_atu[bar] = free_win;
 	set_bit(free_win, rk_pcie->ib_window_map);
 
@@ -429,16 +438,24 @@ static int rk_pcie_ep_outbound_atu(struct rk_pcie *rk_pcie,
 {
 	u32 free_win;
 
-	free_win = find_first_zero_bit(rk_pcie->ob_window_map,
-				       rk_pcie->num_ob_windows);
-	if (free_win >= rk_pcie->num_ob_windows) {
-		dev_err(rk_pcie->dev, "No free outbound window\n");
-		return -EINVAL;
+	if (rk_pcie->in_suspend) {
+		free_win = find_first_bit(rk_pcie->ob_window_map,
+					  rk_pcie->num_ob_windows);
+	} else {
+		free_win = find_first_zero_bit(rk_pcie->ob_window_map,
+					       rk_pcie->num_ob_windows);
+		if (free_win >= rk_pcie->num_ob_windows) {
+			dev_err(rk_pcie->dev, "No free outbound window\n");
+			return -EINVAL;
+		}
 	}
 
 	rk_pcie_prog_outbound_atu(rk_pcie, free_win, PCIE_ATU_TYPE_MEM,
 				  phys_addr, pci_addr, size);
 
+	if (rk_pcie->in_suspend)
+		return 0;
+
 	set_bit(free_win, rk_pcie->ob_window_map);
 	rk_pcie->outbound_addr[free_win] = phys_addr;
 
@@ -904,6 +921,8 @@ static int rk_pcie_phy_init(struct rk_pcie *rk_pcie)
 		return ret;
 	}
 
+	phy_power_on(rk_pcie->phy);
+
 	return 0;
 }
 
@@ -1195,6 +1214,8 @@ static int rk_pcie_probe(struct platform_device *pdev)
 
 	rk_pcie_dbi_ro_wr_dis(rk_pcie);
 
+	device_init_wakeup(dev, true);
+
 	return 0;
 
 deinit_clk:
@@ -1222,11 +1243,16 @@ static int __maybe_unused rockchip_dw_pcie_suspend(struct device *dev)
 	rk_pcie_link_status_clear(rk_pcie);
 	rk_pcie_disable_ltssm(rk_pcie);
 
+	/* make sure assert phy success */
+	usleep_range(200, 300);
+
 	phy_power_off(rk_pcie->phy);
 	phy_exit(rk_pcie->phy);
 
 	clk_bulk_disable(rk_pcie->clk_cnt, rk_pcie->clks);
 
+	rk_pcie->in_suspend = true;
+
 	return 0;
 }
 
@@ -1241,12 +1267,22 @@ static int __maybe_unused rockchip_dw_pcie_resume(struct device *dev)
 		return ret;
 	}
 
+	ret = phy_set_mode(rk_pcie->phy, rk_pcie->phy_mode);
+	if (ret) {
+		dev_err(dev, "fail to set phy to mode %s, err %d\n",
+			(rk_pcie->phy_mode == PHY_MODE_PCIE_RC) ? "RC" : "EP",
+			ret);
+		return ret;
+	}
+
 	ret = phy_init(rk_pcie->phy);
 	if (ret < 0) {
 		dev_err(dev, "fail to init phy, err %d\n", ret);
 		return ret;
 	}
 
+	phy_power_on(rk_pcie->phy);
+
 	rk_pcie_dbi_ro_wr_en(rk_pcie);
 
 	/* release link reset grant */
@@ -1265,6 +1301,12 @@ static int __maybe_unused rockchip_dw_pcie_resume(struct device *dev)
 		return ret;
 	}
 
+	ret = rk_pcie_ep_atu_init(rk_pcie);
+	if (ret) {
+		dev_err(dev, "failed to init ep device\n");
+		return ret;
+	}
+
 	rk_pcie_ep_setup(rk_pcie);
 
 	/* hold link reset grant after link-up */
@@ -1274,6 +1316,8 @@ static int __maybe_unused rockchip_dw_pcie_resume(struct device *dev)
 
 	rk_pcie_dbi_ro_wr_dis(rk_pcie);
 
+	rk_pcie->in_suspend = false;
+
 	return 0;
 }
 
-- 
2.7.4

